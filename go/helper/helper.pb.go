// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helper/helper.proto

package helper

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IdRequest struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b0c20fee0eeba0e, []int{0}
}

func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type IdResponse struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdResponse) Reset()         { *m = IdResponse{} }
func (m *IdResponse) String() string { return proto.CompactTextString(m) }
func (*IdResponse) ProtoMessage()    {}
func (*IdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b0c20fee0eeba0e, []int{1}
}

func (m *IdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdResponse.Unmarshal(m, b)
}
func (m *IdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdResponse.Marshal(b, m, deterministic)
}
func (m *IdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdResponse.Merge(m, src)
}
func (m *IdResponse) XXX_Size() int {
	return xxx_messageInfo_IdResponse.Size(m)
}
func (m *IdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdResponse proto.InternalMessageInfo

func (m *IdResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*IdRequest)(nil), "IdRequest")
	proto.RegisterType((*IdResponse)(nil), "IdResponse")
}

func init() { proto.RegisterFile("helper/helper.proto", fileDescriptor_9b0c20fee0eeba0e) }

var fileDescriptor_9b0c20fee0eeba0e = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xce, 0x48, 0xcd, 0x29,
	0x48, 0x2d, 0xd2, 0x87, 0x50, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x4a, 0xf2, 0x5c, 0x9c, 0x9e,
	0x29, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0xc9, 0xf9, 0x29, 0xa9,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x60, 0xb6, 0x92, 0x0a, 0x17, 0x17, 0x48, 0x41, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x18, 0x17, 0x5b, 0x51, 0x6a, 0x71, 0x69, 0x4e, 0x09, 0x58,
	0x0d, 0x73, 0x10, 0x94, 0x67, 0x64, 0xc2, 0xc5, 0xe6, 0x01, 0x36, 0x56, 0x48, 0x8b, 0x8b, 0xdf,
	0x3d, 0xb5, 0xc4, 0x25, 0xb3, 0xb8, 0xa4, 0x28, 0x33, 0xa9, 0xb4, 0x24, 0xd5, 0x33, 0x45, 0x88,
	0x4b, 0x0f, 0x6e, 0x85, 0x14, 0xb7, 0x1e, 0xc2, 0x34, 0x27, 0x91, 0x53, 0x4c, 0x82, 0xbe, 0x99,
	0xc9, 0x45, 0xf9, 0x01, 0x20, 0xb7, 0xc4, 0x40, 0x4c, 0x48, 0x62, 0x03, 0xbb, 0xcc, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0xa8, 0x0c, 0xf8, 0x74, 0xb0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelperClient is the client API for Helper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelperClient interface {
	GetDistributeId(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*IdResponse, error)
}

type helperClient struct {
	cc *grpc.ClientConn
}

func NewHelperClient(cc *grpc.ClientConn) HelperClient {
	return &helperClient{cc}
}

func (c *helperClient) GetDistributeId(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/Helper/GetDistributeId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelperServer is the server API for Helper service.
type HelperServer interface {
	GetDistributeId(context.Context, *IdRequest) (*IdResponse, error)
}

// UnimplementedHelperServer can be embedded to have forward compatible implementations.
type UnimplementedHelperServer struct {
}

func (*UnimplementedHelperServer) GetDistributeId(ctx context.Context, req *IdRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDistributeId not implemented")
}

func RegisterHelperServer(s *grpc.Server, srv HelperServer) {
	s.RegisterService(&_Helper_serviceDesc, srv)
}

func _Helper_GetDistributeId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelperServer).GetDistributeId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Helper/GetDistributeId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelperServer).GetDistributeId(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Helper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Helper",
	HandlerType: (*HelperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDistributeId",
			Handler:    _Helper_GetDistributeId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helper/helper.proto",
}
